package com.codeburrow.platformer.levels;

import com.codeburrow.platformer.background.BackgroundData;
import com.codeburrow.platformer.game_engine.LevelData;
import com.codeburrow.platformer.special_objects.Location;

import java.util.ArrayList;

/**
 * The forest may be the overall toughest level of them all
 * with a brutally long run of jumps, which are very easy to over or under jump.
 */
public class LevelForest extends LevelData {

    public LevelForest() {
        tiles = new ArrayList<>();
        this.tiles.add("p.......t..................g.........................................................................................uuu");
        this.tiles.add(".............ddddddddddddddddddddddddddd...................1111111....111............................................555");
        this.tiles.add("11111111111111111111111111111111111111111111111111111.........................11....................................1...");
        this.tiles.add(".......w.w.....w.w..w..........w.............................................1111111111.................................");
        this.tiles.add("...................................................................11.11111.......................................1.....");
        this.tiles.add("................................................................11......................................................");
        this.tiles.add("............................................1111111....11111111.....................w..w..w.....................1.......");
        this.tiles.add("....11111111111111111111......11111111111...............................................................................");
        this.tiles.add("5.............................................................................................................1.........");
        this.tiles.add("55............................................................................c.c.c.....................................");
        this.tiles.add("..55..........................................................................11111111111111111111..........1...........");
        this.tiles.add(".....55..............................................55...55.....55555..................................................");
        this.tiles.add("........55..55....55...55....55.....55...55....55..................................................1.......1............");
        this.tiles.add("7.............................d........................................................................................7");
        this.tiles.add("7...............................................................................z....................1...1............7");
        this.tiles.add("7....................................................................d.........z.z.....................................7");
        this.tiles.add("7w..........................................1...............z.................z.z.z....................1..............w7");
        this.tiles.add("7........1111111111.......111111111111.....111111111111111111111111..111111111111111111111111111111111111111111111111117");
        this.tiles.add("7............................................d.........g.......................d............d.......d......c.c.c.c.e...7");
        this.tiles.add("7....1....z........1..........zzz....z........................................z...z....................................7");
        this.tiles.add("111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111");

        // Declare the values for the teleports in order of appearance.
        locations = new ArrayList<>();
        this.locations.add(new Location("LevelMountain", 118f, 17f));

        backgroundDataList = new ArrayList<>();
        this.backgroundDataList.add(new BackgroundData("forest", true, -1, -2, 19, 4, 20));
        this.backgroundDataList.add(new BackgroundData("grass", true, 1, 18, 22, 24, 4));
    }
}
